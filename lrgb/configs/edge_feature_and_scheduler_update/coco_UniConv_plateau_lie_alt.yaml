out_dir: results
metric_best: f1
wandb:
  use: True
  project: COCO
  entity: bkiani
dataset:
  format: PyG-COCOSuperpixels
  name: edge_wt_region_boundary
  slic_compactness: 30
  task: graph  # Even if VOC is node-level task, this needs to be set as 'graph'
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: COCONode+LapPE
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: COCOEdge
  edge_encoder_bn: False
posenc_LapPE:
  enable: True
  eigen:
    laplacian_norm: none
    eigvec_norm: L2
    max_freqs: 10
  model: DeepSet
  dim_pe: 16
  layers: 2
  raw_norm_type: none
posenc_RWSE:
  enable: False
  kernel:
    times_func: range(1,21)
  model: Linear
  dim_pe: 28
  raw_norm_type: BatchNorm
train:
  mode: custom
  batch_size: 50
  eval_period: 1
  ckpt_period: 100
  eval_smoothing_metrics: True
model:
  type: custom_gnn
  loss_fun: weighted_cross_entropy
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_mp: 12
  layers_post_mp: 3
  dim_inner: 175
  layer_type: unitarygcnconv
  normalize_adj: True
  act: c_gelu
  residual: True
  dropout: 0.1
  use_hermitian: True
  layers_conv_setup: 1              # to incorporate edge features
  conv_setup_layer_type: gineconv   # to incorporate edge features
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 0.0
  base_lr: 0.001
  min_lr: 0.00005
  max_epoch: 500
  scheduler: reduce_on_plateau
  num_warmup_epochs: 10             
  schedule_patience: 25             # for reduce_on_plateau
  reduce_factor: 0.8                # for reduce_on_plateau
  num_cycles: 2.5                   # cycles/2 for cosine_with_warmup